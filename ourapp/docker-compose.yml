version: '3.8'
services:
  frontend:
    build:
      context: ./reactapp
      dockerfile: Dockerfile
    volumes:
      - ./reactapp:/app
      - exclude:/app/node_modules
    ports:
      - 3001:3001
    env_file: .env
    
  db:
    env_file: .env
    image: postgres
    volumes:
    - postgres:/var/lib/postgresql/data
  
  adminer:
    image: adminer
    restart: always
    ports:
      - 4000:8080
  
  backend:
    build:
      context: ./railsapp
      dockerfile: Dockerfile
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - ./railsapp:/app
    ports:
      - "3000:3000"
    depends_on:
      - db
    env_file: .env
    entrypoint: /app/docker-entrypoint-rails.sh
    environment:
      RAILS_ENV: development
      RAILS_MAX_THREADS: 5
  
  sidekiq:
    image: ourapp-backend
    command: bundle exec sidekiq
    volumes:
      - ./railsapp:/app
    depends_on:
      - db
    env_file: .env
    environment:
      - RAILS_ENV=development
      - RAILS_MAX_THREADS=5
      - DATABASE_PASSWORD=password
  redis:
    image: redis:latest
    command: redis-server --save 60 50 --loglevel warning
    volumes: 
      - redis_data:/data
    ports:
      - '6379:6379'
volumes:
  exclude:
  postgres:
  redis_data: